USE team;

/* DROP EXERCISE BORAD */
DROP TABLE IF EXISTS EX_C_GOOD;
DROP TABLE IF EXISTS EX_GOOD;
DROP TABLE IF EXISTS EXER_COMM;
DROP TABLE IF EXISTS EXER_BOARD;

/* DROP SECRET BORAD */
DROP TABLE IF EXISTS S_C_GOOD;
DROP TABLE IF EXISTS S_GOOD;
DROP TABLE IF EXISTS SECRET_COMM;
DROP TABLE IF EXISTS SECRET_BOARD;

/* DROP WORRY BORAD */
DROP TABLE IF EXISTS W_C_GOOD;
DROP TABLE IF EXISTS W_GOOD;
DROP TABLE IF EXISTS WORRY_COMM;
DROP TABLE IF EXISTS WORRY_BOARD;

/* DROP DAILY BORAD */
DROP TABLE IF EXISTS D_C_GOOD;
DROP TABLE IF EXISTS D_GOOD;
DROP TABLE IF EXISTS DAILY_COMM;
DROP TABLE IF EXISTS DAILY_BOARD;

/* DROP ADMIN */
DROP TABLE IF EXISTS ADMIN;
DROP TABLE IF EXISTS AUTHORITY;

/* DROP USER ACCESS LOG */
DROP TABLE IF EXISTS U_ACCESS_LOG;

/* DROP POINT */
DROP TABLE IF EXISTS POINT_LOG;

/* DROP USERS */
DROP TABLE IF EXISTS BN_USERS;
DROP TABLE IF EXISTS RT_USERS;
DROP TABLE IF EXISTS SL_USERS;
DROP TABLE IF EXISTS USERS;

/* CREATE USERS */
CREATE TABLE USERS (
    USER_NO    		INT   		NOT NULL AUTO_INCREMENT,
    USER_ID    		VARCHAR(60) NOT NULL,
    USER_PW			VARCHAR(64) NOT NULL,
    NAME      		VARCHAR(20) NOT NULL,
    N_NAME   		VARCHAR(24) NOT NULL,
    GENDER      	VARCHAR(2)  NOT NULL,
    EMAIL      		VARCHAR(50) NOT NULL,
    MOBILE      	VARCHAR(11) NOT NULL,
    BIRTHDAY   		VARCHAR(8)  NOT NULL,
    AGREE_CODE      INT   		NOT NULL,
    SNS_TYPE      	VARCHAR(10),
    JOIN_DATE      	DATE   		NOT NULL,
    SS_ID         	VARCHAR(32),
    SS_LIMIT_DATE   DATE,
    IP 				VARCHAR(30),
	PW_MODIFY_DATE  DATE,
    PRIMARY KEY(USER_NO)
);

CREATE TABLE SL_USERS (
	SL_USER_NO INT NOT NULL,
    USER_ID VARCHAR(60) NOT NULL,
    USER_PW VARCHAR(64) NOT NULL,
    NAME VARCHAR(20) NOT NULL,
    N_NAME VARCHAR(24),
    GENDER VARCHAR(2) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    MOBILE VARCHAR(11) NOT NULL,
    BIRTHDAY VARCHAR(8) NOT NULL,
    AGREE_CODE INT NOT NULL,
    SNS_TYPE INT,
    JOIN_DATE DATE NOT NULL,
    SL_DATE DATE NOT NULL,
    IP VARCHAR(30),
    PRIMARY KEY(SL_USER_NO)
);

CREATE TABLE RT_USERS (
	RT_USER_NO INT NOT NULL,
    USER_ID VARCHAR(60) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    RT_DATE DATE NOT NULL
);

CREATE TABLE BN_USERS (
	BANN_NO INT NOT NULL AUTO_INCREMENT,
    USER_NO INT NOT NULL,
    BANN_DATE DATE NOT NULL,
    BANN_PERIOD INT NOT NULL,
    PRIMARY KEY(BANN_NO),
    FOREIGN KEY(USER_NO) REFERENCES USERS(USER_NO) ON DELETE CASCADE
);

/* CREATE POINT */
CREATE TABLE POINT_LOG(
	POINT_LOG_NO INT NOT NULL AUTO_INCREMENT,
    USER_NO INT NOT NULL,
    POINT_LOG VARCHAR(100) NOT NULL,
    POINT_LOG_DATE DATE NOT NULL,
    POINT INT NOT NULL DEFAULT 0,
    PRIMARY KEY(POINT_LOG_NO),
    FOREIGN KEY(USER_NO) REFERENCES USERS(USER_NO) ON DELETE CASCADE
);

/* CREATE USER ACCESS LOG */
CREATE TABLE U_ACCESS_LOG(
	AC_LOG_NO INT NOT NULL AUTO_INCREMENT,
    USER_NO INT NOT NULL,
    LAST_LOGIN_DATE DATE NOT NULL,
    PRIMARY KEY(AC_LOG_NO),
    FOREIGN KEY(USER_NO) REFERENCES USERS(USER_NO) ON DELETE CASCADE
);

/* CREATE AUTHORITY */
CREATE TABLE AUTHORITY(
	AUTH_NO INT NOT NULL AUTO_INCREMENT,
    AUTH_NM VARCHAR(30) NOT NULL,
    AUTH_DATE DATE NOT NULL,
    PRIMARY KEY(AUTH_NO)
);

/* CREATE ADMIN */
CREATE TABLE ADMIN(
	ADM_NO INT NOT NULL AUTO_INCREMENT,
    ADM_ID VARCHAR(60) NOT NULL,
    ADM_PW VARCHAR(64) NOT NULL,
    ADM_NAME VARCHAR(30) NOT NULL,
    ADM_PHONE VARCHAR(11) NOT NULL,
    ADM_MAIL VARCHAR(60) NOT NULL,
    ADM_GENDER VARCHAR(1) NOT NULL,
    ADM_BIRTH VARCHAR(8) NOT NULL,
    AUTH_NO INT NULL,
    PRIMARY KEY(ADM_NO),
    FOREIGN KEY(AUTH_NO) REFERENCES AUTHORITY(AUTH_NO) ON DELETE SET NULL
);

/* CREATE DIARY BOARD */
CREATE TABLE DAILY_BOARD(
	D_NO INT NOT NULL AUTO_INCREMENT,
    USER_NO INT NULL,
    D_TITLE VARCHAR(100) NOT NULL,
    D_CONT TEXT(20000) NOT NULL,
    D_DATE DATE NOT NULL,
    D_MODY_DATE DATE NULL,
    D_HIT INT NULL,
    PRIMARY KEY(D_NO),
    FOREIGN KEY(USER_NO) REFERENCES USERS(USER_NO) ON DELETE SET NULL
);

CREATE TABLE DAILY_COMM(
	D_COMM_NO INT NOT NULL AUTO_INCREMENT,
    D_NO INT NOT NULL,
    USER_NO INT NULL,
    STATE INT NOT NULL,
    DEPTH INT NOT NULL,
    GROUP_NO INT NOT NULL,
    CREATE_DATE DATE NOT NULL,
    MODIFY_DATE DATE NULL,
    COMM_CONT VARCHAR(1000) NOT NULL,
    PRIMARY KEY(D_COMM_NO),
    FOREIGN KEY(D_NO) REFERENCES DAILY_BOARD(D_NO) ON DELETE CASCADE,
    FOREIGN KEY(USER_NO) REFERENCES USERS(USER_NO) ON DELETE SET NULL
);

CREATE TABLE D_GOOD(
	D_GOOD_NO INT NOT NULL AUTO_INCREMENT,
	USER_NO INT NOT NULL,
    D_NO INT NOT NULL,
    GOOD_DATE DATE NOT NULL,
    PRIMARY KEY(D_GOOD_NO)
);

CREATE TABLE D_C_GOOD(
	D_C_GOOD_NO INT NOT NULL AUTO_INCREMENT,
	USER_NO INT NOT NULL,
    D_COMM_NO INT NOT NULL,
    GOOD_DATE DATE NOT NULL,
    PRIMARY KEY(D_C_GOOD_NO)
);

/* CREATE WORRY BOARD */
CREATE TABLE WORRY_BOARD(
	W_NO INT NOT NULL AUTO_INCREMENT,
    USER_NO INT NULL,
    W_TITLE VARCHAR(100) NOT NULL,
    W_CONT TEXT(20000) NOT NULL,
    W_DATE DATE NOT NULL,
    W_MODY_DATE DATE NULL,
    W_HIT INT NULL,
    IS_ANONY INT NOT NULL,
    PRIMARY KEY(W_NO),
    FOREIGN KEY(USER_NO) REFERENCES USERS(USER_NO) ON DELETE SET NULL
);

CREATE TABLE WORRY_COMM(
	W_COMM_NO INT NOT NULL AUTO_INCREMENT,
    W_NO INT NULL,
    USER_NO INT,
    STATE INT NOT NULL,
    DEPTH INT NOT NULL,
    GROUP_NO INT NOT NULL,
    CREATE_DATE DATE NOT NULL,
    MODIFY_DATE DATE NULL,
    IS_ANONY INT NOT NULL,
    COMM_CONT VARCHAR(1000) NOT NULL,
    PRIMARY KEY(W_COMM_NO),
    FOREIGN KEY(W_NO) REFERENCES WORRY_BOARD(W_NO) ON DELETE CASCADE,
    FOREIGN KEY(USER_NO) REFERENCES USERS(USER_NO) ON DELETE SET NULL
);

CREATE TABLE W_GOOD(
	W_GOOD_NO INT NOT NULL AUTO_INCREMENT,
	USER_NO INT NOT NULL,
    W_NO INT NOT NULL,
    GOOD_DATE DATE NOT NULL,
    PRIMARY KEY(W_GOOD_NO)
);

CREATE TABLE W_C_GOOD(
	W_C_GOOD_NO INT NOT NULL AUTO_INCREMENT,
	USER_NO INT NOT NULL,
    W_COMM_NO INT NOT NULL,
    GOOD_DATE DATE NOT NULL,
    PRIMARY KEY(W_C_GOOD_NO)
);

/* CREATE SECRET BOARD */
CREATE TABLE SECRET_BOARD(
	S_NO INT NOT NULL AUTO_INCREMENT,
    USER_NO INT NULL,
    S_TITLE VARCHAR(100) NOT NULL,
    S_CONT TEXT(20000) NOT NULL,
    S_DATE DATE NOT NULL,
    S_MODY_DATE DATE NULL,
    S_HIT INT NULL,
    IS_ANONY INT NOT NULL,
    PRIMARY KEY(S_NO),
    FOREIGN KEY(USER_NO) REFERENCES USERS(USER_NO) ON DELETE SET NULL
);

CREATE TABLE SECRET_COMM(
	S_COMM_NO INT NOT NULL AUTO_INCREMENT,
    S_NO INT NOT NULL,
    USER_NO INT NULL,
    STATE INT NOT NULL,
    DEPTH INT NOT NULL,
    GROUP_NO INT NOT NULL,
    CREATE_DATE DATE NOT NULL,
    MODIFY_DATE DATE NULL,
    IS_ANONY INT NOT NULL,
    COMM_CONT VARCHAR(1000) NOT NULL,
    PRIMARY KEY(S_COMM_NO),
    FOREIGN KEY(S_NO) REFERENCES SECRET_BOARD(S_NO) ON DELETE CASCADE,
    FOREIGN KEY(USER_NO) REFERENCES USERS(USER_NO) ON DELETE SET NULL
);

CREATE TABLE S_GOOD(
	S_GOOD_NO INT NOT NULL AUTO_INCREMENT,
	USER_NO INT NOT NULL,
    S_NO INT NOT NULL,
    GOOD_DATE DATE NOT NULL,
    PRIMARY KEY(S_GOOD_NO)
);

CREATE TABLE S_C_GOOD(
	S_C_GOOD_NO INT NOT NULL AUTO_INCREMENT,
	USER_NO INT NOT NULL,
    S_COMM_NO INT NOT NULL,
    GOOD_DATE DATE NOT NULL,
    PRIMARY KEY(S_C_GOOD_NO)
);

/* CREATE EXERCISE BOARD */
CREATE TABLE EXER_BOARD(
	EX_NO INT NOT NULL AUTO_INCREMENT,
    USER_NO INT NULL,
    EX_TITLE VARCHAR(100) NOT NULL,
    EX_CONT TEXT(20000) NOT NULL,
    EX_DATE DATE NOT NULL,
    EX_MODY_DATE DATE NULL,
    EX_HIT INT NULL,
    PRIMARY KEY(EX_NO),
    FOREIGN KEY(USER_NO) REFERENCES USERS(USER_NO) ON DELETE SET NULL
);

CREATE TABLE EXER_COMM(
	EX_COMM_NO INT NOT NULL AUTO_INCREMENT,
    EX_NO INT NOT NULL,
    USER_NO INT NULL,
    STATE INT NOT NULL,
    DEPTH INT NOT NULL,
    GROUP_NO INT NOT NULL,
    CREATE_DATE DATE NOT NULL,
    MODIFY_DATE DATE NULL,
    COMM_CONT VARCHAR(1000) NOT NULL,
    PRIMARY KEY(EX_COMM_NO),
    FOREIGN KEY(EX_NO) REFERENCES EXER_BOARD(EX_NO) ON DELETE CASCADE,
    FOREIGN KEY(USER_NO) REFERENCES USERS(USER_NO) ON DELETE SET NULL
);

CREATE TABLE EX_GOOD(
	EX_GOOD_NO INT NOT NULL AUTO_INCREMENT,
	USER_NO INT NOT NULL,
    EX_NO INT NOT NULL,
    GOOD_DATE DATE NOT NULL,
    PRIMARY KEY(EX_GOOD_NO)
);

CREATE TABLE EX_C_GOOD(
	EX_C_GOOD_NO INT NOT NULL AUTO_INCREMENT,
	USER_NO INT NOT NULL,
    EX_COMM_NO INT NOT NULL,
    GOOD_DATE DATE NOT NULL,
    PRIMARY KEY(EX_C_GOOD_NO)
);